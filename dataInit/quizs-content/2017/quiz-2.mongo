{
  "quiz_id": 2,
  "description": "作业题分为单选题，每题10分，总分100分。<br/><br/>定义：如果存在常数$ c > 0 $，使得$ f(n) < c g(n) $，称$ f(n) $是<b>$ O(g(n)) $</b>的。如果存在常数$ c > 0 $，使得$ f(n) > c g(n) $，称$ f(n) $是<b>$ \\Omega (g(n)) $</b>的。<br/>如果$ f(n) $既是$ O(g(n)) $的，也是$ \\Omega (g(n)) $的，称$ f(n) $是<b>$ \\Theta (g(n)) $</b>的。",
  "status": 1,
  "title": "第二次作业",
  "releaseTime": "2017-04-14 12:30:00",
  "deadline": "2017-05-12 23:00:00",
  "content": [
    {
      "id": 1,
      "type": 1,
      "head": "关于 $ O(.)$ , $ \\Omega (.)  $和 $ \\Theta (.) $，下列叙述正确的是(&nbsp;&nbsp;&nbsp;&nbsp;)",
      "choices": [
        {
          "value": "A",
          "text": "$ 2n^3 + n \\ln n $是$ O(n^2) $"
        },
        {
          "value": "B",
          "text": "$ n^2 + 3 $是 $ \\Theta (n^2 \\log n) $"
        },
        {
          "value": "C",
          "text": "$ 2^n $是$ \\Omega (n) $"
        },
        {
          "value": "D",
          "text": "$ n^{\\log n} $是$ O(n^{100}) $"
        }
      ],
      "answer": [
        "C"
      ],
      "score": 10,
      "explanation": "$ 2n^3 + n \\ln n $是$ \\Omega (n^2) $的，$ n^2 + 3 $是 $ O(n^2 \\log n) $的，$ n^{\\log n} $是$ \\Omega (n^{100}) $的。"
    },
    {
      "id": 2,
      "type": 1,
      "head": "以下选项中，对渐近表达式$ \\Theta ((\\log n)^n) $, $ \\Theta (n^{100}) $, $ \\Theta (n^{\\log n}) $, $ \\Theta ((\\log n)!) $,按量级由小到大排列正确的是哪一个 (&nbsp;&nbsp;&nbsp;&nbsp;)",
      "choices": [
        {
          "value": "A",
          "text": "$ \\Theta ((\\log n)!) $, $ \\Theta ((\\log n)^n) $, $ \\Theta (n^{100}) $, $ \\Theta (n^{\\log n}) $"
        },
        {
          "value": "B",
          "text": "$ \\Theta ((\\log n)^n) $, $ \\Theta ((\\log n)!) $, $ \\Theta (n^{100}) $, $ \\Theta (n^{\\log n}) $"
        },
        {
          "value": "C",
          "text": "$ \\Theta ((\\log n)!) $, $ \\Theta (n^{100}) $, $ \\Theta ((\\log n)^n) $, $ \\Theta (n^{\\log n}) $"
        },
        {
          "value": "D",
          "text": "$ \\Theta (n^{100}) $, $ \\Theta ((\\log n)!) $, $ \\Theta (n^{\\log n}) $, $ \\Theta ((\\log n)^n) $"
        }
      ],
      "answer": [
        "D"
      ],
      "score": 10,
      "explanation": "对所有表达式求对数。$ \\ln ((\\log n)^n) = n \\ln \\log n$，$ \\ln (n^{100}) = 100 \\ln n$，$ \\ln (n^{\\log n}) = \\log n \\ln n$，$ \\frac { \\log n}{2} \\ln \\frac { \\log n}{2} = \\ln ({(\\frac { \\log n}{2})}^{ \\frac { \\log n}{2}}) < \\ln ((\\log n)!) < \\ln ({( \\log n)}^{ \\log n}) = \\log n \\ln \\log n$。因为对充分大的$n$，$n \\ln \\log n > \\log n \\ln n > \\log n \\ln \\log n > \\frac { \\log n}{2} \\ln \\frac { \\log n}{2} > 100 \\ln n$，故选D。"
    },
    {
      "id": 3,
      "type": 1,
      "head": "截止到 2013 年 6月，世界上运算速度最快的超级计算机是由中国研制的天河二号，它每秒能完成 5 亿亿次运算！如果我们使用该计算机来近似计算有 1000 个节点的斯坦纳树问题（Steinertree problem），该问题目前最好的算法的时间复杂度为$ n ^ {\\log_{2}n} $(n 表示斯坦纳树的节点个数)，最坏情况下我们大约需要算多长的时间(&nbsp;&nbsp;&nbsp;&nbsp;)",
      "choices": [
        {
          "value": "A",
          "text": "5个月"
        },
        {
          "value": "B",
          "text": "50年"
        },
        {
          "value": "C",
          "text": "500年"
        },
        {
          "value": "D",
          "text": "500000年"
        }
      ],
      "answer": [
        "D"
      ],
      "score": 10,
      "explanation": "${1000}^{ \\log _2 1000} \\approx {1000}^{10} = {10}^{20}$。一年大概有$31536000$即约$ 3 \\times {10}^7$秒，每秒$5$亿亿次即$5 \\times {10}^{16}$次运算，一年能算$15 \\times {10}^{22}$次运算。则需约${10}^{20}/(15 \\times {10}^{22}) \\approx 6 \\times {10}^5$年。"
    },
    {
      "id": 4,
      "type": 1,
      "head": "考虑$n$个数的排序问题，快速排序算法和冒泡排序算法在最坏情况下需要进行的比较次数为(&nbsp;&nbsp;&nbsp;&nbsp;)",
      "choices": [
        {
          "value": "A",
          "text": "$ O(n \\log n) $, $ O(n^2) $"
        },
        {
          "value": "B",
          "text": "$ O(n^2) $, $ O(n^2) $"
        },
        {
          "value": "C",
          "text": "$ O(n) $, $ O(n \\log n) $"
        },
        {
          "value": "D",
          "text": "$ O(n \\log n) $, $ O(n \\log n) $"
        }
      ],
      "answer": [
        "B"
      ],
      "score": 10,
      "explanation": "最坏情况快速排序和冒泡排序的时间复杂度都是$O(n^2)$。"
    },
    {
      "id": 5,
      "type": 1,
      "head": "给定一个排好序的数组，数组有$n$个元素，要查找某一个元素$x$是否在这个数组中，所需要的运行时间是$(&nbsp;&nbsp;&nbsp;&nbsp;)",
      "choices": [
        {
          "value": "A",
          "text": "$ \\Theta (1) $"
        },
        {
          "value": "B",
          "text": "$ \\Theta (\\log n) $"
        },
        {
          "value": "C",
          "text": "$ \\Theta (n/ \\log n) $"
        },
        {
          "value": "D",
          "text": "$ \\Theta (n) $"
        }
      ],
      "answer": [
        "B"
      ],
      "score": 10,
      "explanation": "数组排好序，使用二分查找，只需要$ \\Theta ( \\log n)$的时间。"
    },
    {
      "id": 6,
      "type": 1,
      "head": "求解下列递归式的渐进式：$ T(n) = ?$(&nbsp;&nbsp;&nbsp;&nbsp;)<br/><br/>$ \\left\\{ \\begin{array}{l l} T(1) = 1 \\\\ T(n)=3T( \\frac {n}{2} ) + n^2 \\end{array} \\right.$",
      "choices": [
        {
          "value": "A",
          "text": "$ \\Theta (n \\log n) $"
        },
        {
          "value": "B",
          "text": "$ \\Theta (n^2) $"
        },
        {
          "value": "C",
          "text": "$ \\Theta (n^2 \\log n) $"
        },
        {
          "value": "D",
          "text": "$ \\Theta (n^3) $"
        }
      ],
      "answer": [
        "B"
      ],
      "score": 10,
      "explanation": "因为$T(n)=3T( \\frac {n}{2} ) + n^2$，则$T(n) - 4n^2 = 3T(\\frac {n}{2}) -12(\\frac{n}{2})^2$。定义$G(n) = T(n) -4n^2$，有$ \\left\\{ \\begin{array}{l l} G(1) = -3 \\\\ G(n)=3G( n/2 ) \\end{array} \\right. $ 则$G(n) = -3^{1 + \\log_{2}n} $。因此，$T(n) = 4n^2 - 3^{1 + \\log_{2}n}$。"
    },
    {
      "id": 7,
      "type": 1,
      "head": "$64$名同学参加乒乓球赛，要想决出冠军至少需要赛多少场？想要决出冠军以及亚军需要比赛多少场？(&nbsp;&nbsp;&nbsp;&nbsp;)",
      "choices": [
        {
          "value": "A",
          "text": "$63$, $64$"
        },
        {
          "value": "B",
          "text": "$63$, $68$"
        },
        {
          "value": "C",
          "text": "$63$, $94$"
        },
        {
          "value": "D",
          "text": "$63$, $125$"
        }
      ],
      "answer": [
        "B"
      ],
      "score": 10,
      "explanation": "可以把比赛抽象为$64$个数的比较问题，并用败者树实现。一棵完全二叉树有$64$个叶子节点时，内部节点总共有$63$个，树高为$7$。故选最大元素需要$63$次比较。选次大元素，只需要更新某条路径上的节点值，需要的比较次数是树高$7 - 2 = 5$。故选最大元素和次大元素需要$68$次比较。"
    },
    {
      "id": 8,
      "type": 1,
      "head": "以下计算问题是否属于 NP 问题(&nbsp;&nbsp;&nbsp;&nbsp;)<br/><br/>问题一：输入 $n$ 个整数$ a_1, a_2, … , a_𝑛 $和正整数 $ k ( < n) $，判定是否能从中找到$ k$个数使得其和为 0。<br/>问题二：输入两个正整数 $ a $ 和 $ b $，判定 $ a $ 和 $ b $ 是否互素。",
      "choices": [
        {
          "value": "A",
          "text": "是，是"
        },
        {
          "value": "B",
          "text": "是，否"
        },
        {
          "value": "C",
          "text": "否，是"
        },
        {
          "value": "D",
          "text": "否，否"
        }
      ],
      "answer": [
        "A"
      ],
      "score": 10,
      "explanation": "$NP$是非确定性图灵机多项式时间可以识别的语言类，也是可以多项式时间验证的语言类。问题一如果给定中的某个数，要判定这个数是否和为 0，显然可以多项式时间验证。问题二判定和是否互素可以用辗转相除法，因此属于$P$，也就属于$NP$。"
    },
    {
      "id": 9,
      "type": 1,
      "head": "P和NP的关系是以下哪一种？(&nbsp;&nbsp;&nbsp;&nbsp;) 其中矩形代表所有图灵机可以计算的问题。<table align='center' class='ques_desc_noneborder'><tr><td><img src='/static/content/homework/homework_2_9_A.png' /></td><td><img src='/static/content/homework/homework_2_9_B.png' /></td></tr><tr><td><img src='/static/content/homework/homework_2_9_C.png' /></td><td><img src='/static/content/homework/homework_2_9_D.png' /></td></tr></table>",
      "choices": [
        {
          "value": "A",
          "text": "图9-1"
        },
        {
          "value": "B",
          "text": "图9-2"
        },
        {
          "value": "C",
          "text": "图9-3"
        },
        {
          "value": "D",
          "text": "图9-4"
        }
      ],
      "answer": [
        "C"
      ],
      "score": 10,
      "explanation": "$P$是确定性图灵机多项式时间可以识别的语言类，$NP$是非确定性图灵机多项式时间可以识别的语言类。依据定义可知$P \\subseteq NP $。且存在可计算问题不在$NP$中，如需要指数空间的问题。"
    },
    {
      "id": 10,
      "type": 1,
      "head": "考虑具有如下初始状态的“三柱汉诺塔”问题：其第一根柱子上的圆盘编号为1号，3号和5号，第二根柱子上的圆盘编号为2号和4号，第三根柱子为空。请问至少还要多少步才能将所有圆盘搬到第三根柱子上 (&nbsp;&nbsp;&nbsp;&nbsp;)",
      "choices": [
        {
          "value": "A",
          "text": "20"
        },
        {
          "value": "B",
          "text": "21"
        },
        {
          "value": "C",
          "text": "22"
        },
        {
          "value": "D",
          "text": "23"
        }
      ],
      "answer": [
        "C"
      ],
      "score": 10,
      "explanation": "经典的$n$个圆盘的汉诺塔问题需要的步数为$2^{n} - 1$。本题一种移动步骤如下：2号从第二根柱子移动到第三个柱子，1号从第一个柱子移动到第三根柱子，3号从第三根柱子移动到第二根柱子，1,2号保持顺序从第三根柱子移动到第二根柱子，5号从第一根柱子移动到第三根柱子，1,2,3,4号保持顺序从第二根柱子移动到第三根柱子。总共需要的步数为$1 + 1 + 1 + 2^{2} - 1 + 1 + 2^{4} - 1 = 22$。不难验证这种移动方案是最优的。首先，5号圆盘从一号柱子移动到三号柱子是不可避免的，此时1,2,3,4号圆盘一定按顺序排列在二号柱子上。继续往前推导，4号圆盘在二号柱子上，3号圆盘移动到4号圆盘上是不可避免的，此时，1,2号圆盘一定按顺序排列在另外一根柱子上。继续往前推导，2号从4号圆盘上移开和1号圆盘移动到2号圆盘上都是不可避免的。因此，22步的移法是最优的。"
    }
  ]
}